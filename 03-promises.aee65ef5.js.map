{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAgBJ,SAASC,cAAc,wBAEvCI,EAAgB,SAACC,EAAUC,GAc/B,OAbgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGtCJ,EAAQ,CAACH,WAAUC,UAInBG,EAAO,CAACJ,WAAUC,S,GAEjBA,E,KAuBP,SAASO,EAAUC,G,IAACT,EAADS,EAACT,SAAUC,EAAXQ,EAAWR,MAC5BS,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CAGxE,SAASa,EAAUL,G,IAACT,EAADS,EAACT,SAAUC,EAAXQ,EAAWR,MAC5BS,EAAAnB,GAASoB,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CAGrER,EAAKuB,iBAAiB,UA1BtB,SAAuBC,GACrBA,EAAEC,iBASF,IAPA,IAAMC,EAAWC,OAAOxB,EAAWyB,OAC7BC,EAAOF,OAAOvB,EAAUwB,OACxBE,EAASH,OAAOtB,EAAcuB,OAK5BG,EAAI,EAAGA,GAAKD,EAAQC,IAExBzB,EAAcyB,EAAGL,GAAYK,EAAI,GAAKF,GACrCG,KAAKjB,GACLkB,MAAMZ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amountAttempt = document.querySelector('input[name=\"amount\"]');\n\nconst createPromise = (position, delay) => {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({position, delay});\n\n    } else {\n      // Reject\n      reject({position, delay});\n    }\n    }, delay);\n  })\n  return promise;  \n}\n\nfunction renderPromise(e) {\n  e.preventDefault();\n\n  const setDelay = Number(firstDelay.value);\n  const step = Number(delayStep.value);\n  const amount = Number(amountAttempt.value);\n\n  //if above figures are < , amount <=0 so no promise is rendered but a Notif is shown that \n  //'all' data should be more than 0\n\n  for(let i = 1; i <= amount; i++) {\n    //delay += step\n      createPromise(i, setDelay + (i - 1) * step)\n      .then(onSuccess)\n      .catch(onFailure);\n  }\n}\n\nfunction onSuccess({position, delay}) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onFailure({position, delay}) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n  \nform.addEventListener('submit', renderPromise);\n\n//------------------\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountAttempt","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$onSuccess","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onFailure","failure","addEventListener","e","preventDefault","setDelay","Number","value","step","amount","i","then","catch"],"version":3,"file":"03-promises.aee65ef5.js.map"}