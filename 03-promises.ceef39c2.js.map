{"mappings":"gfAAAA,EAAA,SAEmBC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBAC1BD,SAASC,cAAc,uB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nlet delay = 1000;\nconst step = 500;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    fulfilled(firstDelay, delayStep);\n\n  } else {\n    // Reject\n    failed();\n  }\n}\n\nfunction fulfilled(position, delay) {\n  let i = position;\n  for(let i = 0; i < amount.value; i ++) {\n    setInterval(() => {\n      createPromise(i, delay + i * step);\n    }, delay);\n  }\n  Notiflix.Notify.success(`Fulfilled promise ${i} in ${delay}`);\n}\n\nfunction failed(position, delay) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}`);\n}\n"],"names":["parcelRequire","document","querySelector"],"version":3,"file":"03-promises.ceef39c2.js.map"}